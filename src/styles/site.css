/* P reset */
@import "./preset.css" layer(base);

/* S etup */
@import "./setup.css" layer(base);

/* @import "@xyflow/react/dist/base.css"; */
@import "@xyflow/react/dist/style.css" layer(base);

@import "tailwindcss";

@plugin "tailwindcss-animate";

@variant dark (&:where(.dark, .dark *));

@theme {
  /* Font families */
  --font-display: ui-serif, serif;
  --font-body: system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell,
    "Noto Sans", sans-serif;

  /* Colors */
  /* Colors */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  /* Status colors */
  --color-success: var(--success);
  --color-warning: var(--warning);
  --color-error: var(--error);

  /* Other colors */
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  /* Chart colors */
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --color-sidebar: var(--sidebar-background);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);

  --radius-lg: 0.5rem;
  --radius-md: calc(var(--radius-lg) - 2px);
  --radius-sm: calc(var(--radius-lg) - 4px);
}

@layer base {
  /* Shadcn stone */
  :root {
    --background: var(--color-stone-50);
    --foreground: var(--color-stone-950);

    --card: var(--color-white);
    --card-foreground: var(--color-stone-950);
    --popover: var(--color-white);
    --popover-foreground: var(--color-stone-950);

    /*  */
    --primary: var(--color-emerald-500);
    --primary-foreground: var(--color-emerald-50);

    --secondary: var(--color-violet-100);
    --secondary-foreground: var(--color-violet-900);

    --accent: var(--color-rose-100);
    --accent-foreground: var(--color-rose-900);

    --muted: var(--color-stone-100);
    --muted-foreground: var(--color-stone-500);

    --destructive: var(--color-red-500);
    --destructive-foreground: var(--color-stone-50);

    --success: var(--color-green-500);
    --warning: var(--color-amber-500);
    --error: var(--color-red-500);

    /*  */
    --border: var(--color-stone-200);
    --input: var(--color-stone-200);
    --ring: var(--color-stone-950);
    --chart-1: hsl(12 76% 61%);
    --chart-2: hsl(173 58% 39%);
    --chart-3: hsl(197 37% 24%);
    --chart-4: hsl(43 74% 66%);
    --chart-5: hsl(27 87% 67%);

    --sidebar-background: var(--color-zinc-50);
    --sidebar-foreground: var(--color-zinc-700);

    --sidebar-primary: var(--color-zinc-900); /* replace with emerald */
    --sidebar-primary-foreground: var(--color-zinc-50);

    --sidebar-accent: var(--color-zinc-100); /* replace with rose */
    --sidebar-accent-foreground: var(--color-zinc-900);

    --sidebar-border: var(--color-gray-200);
    --sidebar-ring: var(--color-blue-500); /* replace with secondary/accent */
  }
  .dark {
    --background: var(--color-stone-950);
    --foreground: var(--color-stone-50);
    --card: var(--color-stone-950);
    --card-foreground: var(--color-stone-50);
    --popover: var(--color-stone-950);
    --popover-foreground: var(--color-stone-50);
    --primary: var(--color-emerald-50);
    --primary-foreground: var(--color-emerald-900);
    --secondary: var(--color-violet-800);
    --secondary-foreground: var(--color-violet-50);
    --muted: var(--color-stone-800);
    --muted-foreground: var(--color-stone-400);
    --accent: var(--color-rose-800);
    --accent-foreground: var(--color-rose-50);
    --destructive: var(--color-red-900);
    --destructive-foreground: var(--color-stone-50);
    --border: var(--color-stone-800);
    --input: var(--color-stone-800);
    --ring: var(--color-stone-300);
    --chart-1: hsl(220 70% 50%);
    --chart-2: hsl(160 60% 45%);
    --chart-3: hsl(30 80% 55%);
    --chart-4: hsl(280 65% 60%);
    --chart-5: hsl(340 75% 55%);

    --sidebar-background: var(--color-zinc-900);
    --sidebar-foreground: var(--color-zinc-100);
    --sidebar-primary: var(--color-emerald-700);
    --sidebar-primary-foreground: var(--color-white);
    --sidebar-accent: var(--color-zinc-800);
    --sidebar-accent-foreground: var(--color-zinc-100);
    --sidebar-border: var(--color-zinc-800);
    --sidebar-ring: var(--color-blue-500); /* replace with secondary/accent */
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-border, currentColor);
  }

  /* // */

  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  #__next {
    height: 100vh;
  }
}

@layer base {
  /* react flow */

  .react-flow {
    direction: ltr;

    --xy-edge-stroke-default: #b1b1b7;
    --xy-edge-stroke-width-default: 2;
    --xy-edge-stroke-selected-default: #555;

    --xy-connectionline-stroke-default: #b1b1b7;
    --xy-connectionline-stroke-width-default: 1;

    --xy-attribution-background-color-default: rgba(255, 255, 255, 0.5);

    --xy-minimap-background-color-default: #fff;
    --xy-minimap-mask-background-color-default: rgb(240, 240, 240, 0.6);
    --xy-minimap-mask-stroke-color-default: transparent;
    --xy-minimap-mask-stroke-width-default: 1;
    --xy-minimap-node-background-color-default: #e2e2e2;
    --xy-minimap-node-stroke-color-default: transparent;
    --xy-minimap-node-stroke-width-default: 2;

    --xy-background-color-default: transparent;
    --xy-background-pattern-dots-color-default: #91919a;
    --xy-background-pattern-lines-color-default: #eee;
    --xy-background-pattern-cross-color-default: #e2e2e2;
    background-color: var(
      --xy-background-color,
      var(--xy-background-color-default)
    );
    --xy-node-color-default: inherit;
    --xy-node-border-default: 1px solid #1a192b;
    --xy-node-background-color-default: #fff;
    --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
    --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(0, 0, 0, 0.08);
    --xy-node-boxshadow-selected-default: 0 0 0 0.5px #1a192b;
    --xy-node-border-radius-default: 3px;

    --xy-handle-background-color-default: #1a192b;
    --xy-handle-border-color-default: #fff;

    --xy-selection-background-color-default: rgba(0, 89, 220, 0.08);
    --xy-selection-border-default: 1px dotted rgba(0, 89, 220, 0.8);

    --xy-controls-button-background-color-default: #fefefe;
    --xy-controls-button-background-color-hover-default: #f4f4f4;
    --xy-controls-button-color-default: inherit;
    --xy-controls-button-color-hover-default: inherit;
    --xy-controls-button-border-color-default: #eee;
    --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);

    --xy-edge-label-background-color-default: #ffffff;
    --xy-edge-label-color-default: inherit;
    --xy-resize-background-color-default: #3367d9;
  }
  .react-flow.dark {
    --xy-edge-stroke-default: #3e3e3e;
    --xy-edge-stroke-width-default: 1;
    --xy-edge-stroke-selected-default: #727272;

    --xy-connectionline-stroke-default: #b1b1b7;
    --xy-connectionline-stroke-width-default: 1;

    --xy-attribution-background-color-default: rgba(150, 150, 150, 0.25);

    --xy-minimap-background-color-default: #141414;
    --xy-minimap-mask-background-color-default: rgb(60, 60, 60, 0.6);
    --xy-minimap-mask-stroke-color-default: transparent;
    --xy-minimap-mask-stroke-width-default: 1;
    --xy-minimap-node-background-color-default: #2b2b2b;
    --xy-minimap-node-stroke-color-default: transparent;
    --xy-minimap-node-stroke-width-default: 2;

    --xy-background-color-default: #141414;
    --xy-background-pattern-dots-color-default: #777;
    --xy-background-pattern-lines-color-default: #777;
    --xy-background-pattern-cross-color-default: #777;
    --xy-node-color-default: #f8f8f8;
    --xy-node-border-default: 1px solid #3c3c3c;
    --xy-node-background-color-default: #1e1e1e;
    --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
    --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(255, 255, 255, 0.08);
    --xy-node-boxshadow-selected-default: 0 0 0 0.5px #999;

    --xy-handle-background-color-default: #bebebe;
    --xy-handle-border-color-default: #1e1e1e;

    --xy-selection-background-color-default: rgba(200, 200, 220, 0.08);
    --xy-selection-border-default: 1px dotted rgba(200, 200, 220, 0.8);

    --xy-controls-button-background-color-default: #2b2b2b;
    --xy-controls-button-background-color-hover-default: #3e3e3e;
    --xy-controls-button-color-default: #f8f8f8;
    --xy-controls-button-color-hover-default: #fff;
    --xy-controls-button-border-color-default: #5b5b5b;
    --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);

    --xy-edge-label-background-color-default: #141414;
    --xy-edge-label-color-default: #f8f8f8;
  }

  :is(.react-flow__edge):hover {
    path {
      /* stroke: var(--primary); */
    }
  }
}

/* utility classes */

@utility booming-voice {
  font-family: var(--font-display);
  font-size: var(--text-4xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--leading-tight);
}

@utility loud-voice {
  font-family: var(--font-body);
  font-size: var(--text-3xl);
  line-height: var(--leading-tight);
}

@utility attention-voice {
  font-family: var(--font-display);
  font-size: var(--text-2xl);
  line-height: var(--leading-tight);
}

@utility firm-voice {
  font-family: var(--font-body);
  font-size: var(--text-xl);
  line-height: var(--leading-tight);
}

@utility notice-voice {
  font-family: var(--font-body);
  font-size: var(--text-lg);
  line-height: var(--leading-normal);
}

@utility calm-voice {
  font-family: var(--font-body);
  font-size: var(--text-base);
  line-height: var(--leading-normal);
}

@utility whisper-voice {
  font-family: var(--font-body);
  font-size: var(--text-sm);
  color: var(--color-gray-500);
  line-height: var(--leading-normal);
}

@utility solid-voice {
  font-family: var(--font-body);
  font-size: var(--text-sm);
  font-weight: var(--font-weight-bold);
  line-height: var(--leading-normal);
}

@utility micro-voice {
  font-family: var(--font-body);
  font-size: var(--text-xs);
  line-height: var(--leading-normal);
}

@utility inner-column {
  /* Structure */
  display: block;
  width: 100%;
  max-width: var(--max-w-base);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
  padding-top: var(--spacing-8);
  padding-bottom: var(--spacing-8);
}

/* @utility wide {
  &.inner-column {
    @apply max-w-[1400px];
  }
}

@utility narrow {
  &.inner-column {
    @apply max-w-[800px];
  }
}

@utility full {
  &.inner-column {
    @apply max-w-full;
  }
} */

/* then other contextual styles */

@layer components {
  code {
    @apply text-[8px] max-w-[25em] bg-white/95 p-1.5 rounded border shadow-sm;
  }

  /*  */

  /* scrollbar */
  * {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: var(--line-width); /* Firefox */
  }
  /* This part is for the scrollbar track / */
  *::-webkit-scrollbar {
    width: var(--line-width);
    height: var(--line-width);
  }

  /* / This part is for the track (the part that the thumb slides across) / */
  ::-webkit-scrollbar-track {
    box-shadow: var(--shadow);
    border-radius: var(--corners);
  }

  /* / This part is for the thumb (the part you drag) / */
  ::-webkit-scrollbar-thumb {
    background: var(--gradient-color);
    border-radius: var(--corners);
  }

  /* / This part is for the thumb when it's being hovered over  */
  ::-webkit-scrollbar-thumb:hover {
    filter: brightness(1.2);
  }
}

@layer utilities {
  @property --angle {
    syntax: "<angle>";
    initial-value: 90deg;
    inherits: true;
  }
  @keyframes rotate {
    from {
      --angle: 0deg;
    }
    to {
      --angle: 360deg;
    }
  }

  @keyframes edge-running {
    from {
      stroke-dashoffset: 10;
    }
  }

  @keyframes edge-completed {
    from {
      stroke-dashoffset: 0;
    }
  }

  .animate-edge.running {
    stroke-dasharray: 5;
    animation: edge-running 0.5s linear infinite;
  }

  .animate-edge.completed {
    stroke: var(--color-success);
    fill: none;
    stroke-width: var(--xy-edge-stroke-width-default);
    stroke-dasharray: var(--edge-length);
    stroke-dashoffset: calc(var(--edge-length) * 1);
    /* transition: stroke-dashoffset 0.5s ease; */
    animation: edge-completed 0.5s ease forwards reverse;
  }

  .animate-edge.failed {
    stroke: var(--color-destructive);
    stroke-dasharray: 5;

    animation: edge-running 0.5s steps(4) infinite reverse;
  }

  .animate-node-border {
    position: relative;
  }

  .animate-node-border::before {
    content: "";
    position: absolute;
    inset: -4px;
    z-index: -1;
    border-radius: inherit;
    --color: var(--color-primary);
    transition: all 0.3s ease;
  }

  .animate-node-border.running::before {
    background: conic-gradient(var(--color) var(--angle), transparent 0);
    animation: rotate 2s ease-in-out infinite;
  }

  .animate-node-border.completed::before {
    --color: var(--color-success);
    background: var(--color);
    inset: -4px;
  }

  .animate-node-border.failed::before {
    --color: var(--color-destructive);
    background: var(--color);
    animation: var(--animate-ping);
    scale: 0.65;
  }
}
